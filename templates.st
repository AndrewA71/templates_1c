{1,
{7,
{"Альтернативные шаблоны",1,0,"",""},
{5,
{"Препроцессор",1,0,"",""},
{0,
{"#Вставка",0,0,"Вст","#Вставка
<?>
#КонецВставки"}
},
{0,
{"#Удаление",0,0,"Удал","#Удаление
<?>
#КонецУдаления"}
},
{0,
{"#Область",0,0,"Обл[асть]","#Область <?""Имя области"">
	
#КонецОбласти"}
},
{0,
{"#Если",0,0,"Инстр[укция]","#Если <?""Выберите инструкцию препроцессора"", ВыборВарианта, ""Сервер"", ""Сервер"", ""Клиент"", ""Клиент"", ""ТонкийКлиент"", ""ТонкийКлиент"", ""ВебКлиент"", ""ВебКлиент"", ""ВнешнееСоединение"", ""ВнешнееСоединение"", ""ТолстыйКлиентУправляемоеПриложение"", ""ТолстыйКлиентУправляемоеПриложение"", ""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентОбычноеПриложение""> Тогда
	<?>
#КонецЕсли"}
},
{0,
{"Директива компиляции",0,0,"Дирек[тива]","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервере"", ""НаКлиентеНаСервере"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">"}
}
},
{8,
{"Управляющие",1,0,"",""},
{0,
{"Если",0,0,"Если","Если <?""Условие""> Тогда

	<?>

КонецЕсли;"}
},
{0,
{"ЕслиИначе",0,0,"Если","Если <?""Условие""> Тогда

	<?>

Иначе

	

КонецЕсли;"}
},
{0,
{"Пока",0,0,"Пока","Пока <?""Условие""> Цикл

	<?>

КонецЦикла;"}
},
{0,
{"Для",0,0,"Для","Для <?""Счетчик""> По <?""Ограничение""> Цикл

	<?>

КонецЦикла;"}
},
{0,
{"Для каждого",0,0,"Для[ Каждого]","Для Каждого <?""Переменная""> Из <?""Коллекция""> Цикл

	<?>

КонецЦикла;"}
},
{0,
{"Процедура",0,0,"Проц[едура]","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Процедура <?""Имя процедуры"">()

	<?>

КонецПроцедуры
"}
},
{0,
{"Функция",0,0,"Функ[ция]","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Функция <?""Имя функции"">()

	<?>

КонецФункции
"}
},
{0,
{"Попытка",0,0,"Попы[тка]","Попытка

	<?>

Исключение

КонецПопытки;"}
}
},
{6,
{"Прикладные",1,0,"",""},
{0,
{"Перечисление",0,0,"Переч[исление]","ПредопределенноеЗначение(""Перечисление.<?""Выберите значение перечисления"", ЗначениеПеречисления>"")"}
},
{1,
{"Общие формы",1,0,"",""},
{0,
{"Открыть общую форму",0,0,"","Оповещение = Новый ОписаниеОповещения(<?""Имя процедуры оповещения"">, ЭтаФорма);

ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить(""<?>"", );

ОткрытьФорму(""ОбщаяФорма.<?""Выберите общую форму"", ОбъектМетаданных, ""ОбщаяФорма"">"", ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
"}
}
},
{2,
{"Справочники",1,0,"",""},
{0,
{"Справочник",0,0,"Справ[очник]","ПредопределенноеЗначение(""Справочник.<?""Выберите значение справочника"", СправочникПредопределенныеДанные>"")"}
},
{0,
{"Открыть форму справочника",0,0,"Открыть[Форму]","Оповещение = Новый ОписаниеОповещения(""<?""Имя процедуры оповещения"">"", ЭтаФорма);

ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить(""<?>"", );

ОткрытьФорму(""Справочник.<?""Выберите справочник"", Справочник>.<?""Выберите форму"", ВыборВарианта, ""Объекта"", ""ФормаОбъекта"", ""Списка"", ""ФормаСписка"", ""Выбора"", ""ФормаВыбора"", ""Группы"", ""ФормаГруппы"", ""Выбора группы"", ""ФормаВыбораГруппы"", ""Произвольная"", ""Форма."">"", ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

"}
}
},
{1,
{"Документы",1,0,"",""},
{0,
{"Открыть форму документа",0,0,"Открыть[Форму]","Оповещение = Новый ОписаниеОповещения(""<?""Имя процедуры оповещения"">"", ЭтаФорма);

ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить(""<?>"", );

ОткрытьФорму(""Документ.<?""Выберите документ"", Документ>.<?""Выберите форму"", ВыборВарианта, ""Объекта"", ""ФормаОбъекта"", ""Списка"", ""ФормаСписка"", ""Выбора"", ""ФормаВыбора"", ""Произвольная"", ""Форма."">"", ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
"}
}
},
{1,
{"Обработки",1,0,"",""},
{0,
{"Открыть форму обработки",0,0,"Открыть[Форму]","Оповещение = Новый ОписаниеОповещения(""<?""Имя процедуры оповещения"">"", ЭтаФорма);

ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить(""<?>"", );

ОткрытьФорму(""Обработка.<?""Выберите обработку"", Обработка>.<?""Выберите форму"", ВыборВарианта, ""Форма"", ""Форма"", ""Произвольная"", ""Форма."">"", ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
"}
}
},
{2,
{"Оповещения",1,0,"",""},
{0,
{"Описание оповещения",0,0,"Опов[ещение]","Оповещение = Новый ОписаниеОповещения(""<?""Имя процедуры"">"", <?>);"}
},
{0,
{"Процедура закрытия формы",0,0,"Опов[ещение]","&НаКлиенте
Процедура <?""Имя процедуры"">(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если РезультатЗакрытия <> Неопределено Тогда
		
		<?>
		
	КонецЕсли;
	
КонецПроцедуры
"}
}
}
},
{6,
{"Прочие",1,0,"",""},
{0,
{"Структура",0,0,"Струк[тура]","Новый Структура(""<?>"", )"}
},
{0,
{"Формат",0,0,"Форм[ат]","Формат(<?>, """")"}
},
{0,
{"Вопрос Асинх",0,0,"Вопрос[Асинх]","Ждать ВопросАсинх(""<?""Текст вопроса"">"", <?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">) = <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Таймаут"", ""КодВозвратаДиалога.Таймаут"">"}
},
{0,
{"Запрос",0,0,"Запрос","Запрос = Новый Запрос;
Запрос.Текст = 
""<?"""", ТекстЗапроса>"";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();

Пока Выборка.Следующий() Цикл

	<?>

КонецЦикла;
"}
},
{0,
{"Проверка типа",0,0,"ТипЗнч","Если ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"") Тогда

	<?>

КонецЕсли;"}
},
{0,
{"Описание типов",0,0,"Опис[ание]","<?""Конструктор описания типов"", КонструкторОписанияТипов>"}
}
},
{7,
{"Операторы",1,0,"",""},
{0,
{"Больше",0,0,"бш","> <?> "}
},
{0,
{"Меньше",0,0,"мш","< <?> "}
},
{0,
{"Больше или равно",0,0,"бшр",">= <?> "}
},
{0,
{"Меньше или равно",0,0,"мшр","<= <?> "}
},
{0,
{"Не равно",0,0,"нр","<> <?> "}
},
{0,
{"Амперсанд",0,0,"амп","&<?>"}
},
{0,
{"Индекс",0,1,"Инд[екс]","[<?""Индекс"">]"}
}
},
{2,
{"Комментарий",1,0,"",""},
{0,
{"Начало изменения",0,0,"/+","//+<?"""", ИмяПользователя> <?, ДатаВремя, ""ДФ=dd.MM.yyyy"">"}
},
{0,
{"Конец изменения",0,0,"/-","//-<?"""", ИмяПользователя> <?, ДатаВремя, ""ДФ=dd.MM.yyyy"">"}
}
},
{3,
{"БСП",1,0,"",""},
{0,
{"СообщениеСервер",0,0,"Сообщ[ение]","ОбщегоНазначения.СообщитьПользователю(""<?>"");"}
},
{0,
{"СообщениеКлиент",0,0,"Сообщ[ение]","ОбщегоНазначенияКлиент.СообщитьПользователю(""<?>"");"}
},
{0,
{"Регистрация внешний обработки или отчета",0,0,"Регис[трация]","#Область РегистрацияОбработки

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Наименование = ""<?""Наименование"">"";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Версия = ""<?"""", ДатаВремя, ""ДФ='yyyyMMdd''.1'''"">"";
	ПараметрыРегистрации.Информация = ПараметрыРегистрации.Наименование;
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.<?""Вид обработки"", ВыборВарианта, ""Дополнительная обработка"", ""ВидОбработкиДополнительнаяОбработка"", ""Дополнительный отчет"", ""ВидОбработкиДополнительныйОтчет"">();
	//ПараметрыРегистрации.Вставить(""ИспользуетХранилищеВариантов"", Истина);

	// Добавление команд
	СтрокаКоманды = ПараметрыРегистрации.Команды.Добавить();
	СтрокаКоманды.Идентификатор = ПараметрыРегистрации.Наименование;
	СтрокаКоманды.Представление = ПараметрыРегистрации.Наименование;
	СтрокаКоманды.ПоказыватьОповещение = Ложь;
	СтрокаКоманды.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.<?""Тип команды"", ВыборВарианта, ""Открытие формы"", ""ТипКомандыОткрытиеФормы"", ""Вызов серверного метода"", ""ТипКомандыВызовСерверногоМетода"">();
	//СтрокаКоманды.Модификатор = ""ПечатьMXL"";

	// Добавление назначений
	ПараметрыРегистрации.Назначение.Добавить(""<?""Тип назначения"", ВыборВарианта, ""Справочник"", ""Справочник"", ""Документ"", ""Документ"">.<?""Назначение<?"""", ОбъектМетаданных>"", ОбъектМетаданных, ""Справочник"", ""Документ"">"");

	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти"}
}
}
}
}